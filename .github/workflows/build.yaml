name: Build API Clients
on:
  workflow_dispatch:
    inputs:
      docker-image-name:
        description: 'Docker image name'
        type: string
        required: true
      client-name:
        description: 'Output client name'
        type: string
        required: true
      version:
        description: 'version'
        type: string
        required: true
jobs:
  setup:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4


      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{secrets.QUAY_USER}}
          password: ${{secrets.QUAY_PASS}}

      - name: Start Backend Service
        run: |
          docker pull "${{ github.event.inputs.docker-image-name }}:${{ github.event.inputs.version }}"
          docker run -d --name backend_service_container --network host "${{ github.event.inputs.docker-image-name }}:${{ github.event.inputs.version }}" poetry run gunicorn


      - name: Wait for service to start
        run: |
          # wait for running
          until [ "`docker inspect -f {{.State.Running}} backend_service_container`"=="true" ]; do
            sleep 0.1;
          done;
          sleep 5

      - name: Build Python Client
        working-directory: ./python
        run: |
          npm install
          rm -rf "clients/${{ github.event.inputs.client-name }}"
          npx openapi-generator-cli generate -o "clients/${{ github.event.inputs.client-name }}" \
            -i "http://localhost:8000/api/schema/" --package-name=${{ github.event.inputs.client-name }} \
            -g python --skip-validate-spec --minimal-update \
            --additional-properties="floatStrictType=false,packageVersion=${{ github.event.inputs.version }}" \
            --global-property="apiTests=false,modelTests=false"
          
      - name: Add and Commit
        uses: EndBug/add-and-commit@v9
        with:
          add: 'python/clients/'
          author_name: Generator Bot
          author_email: tharindu.bathigama@rapyuta-robotics.com
          message: 'Generated Python Client for ${{ github.event.inputs.client-name }} with tag ${{ github.event.inputs.version }}'
          tag: '${{ github.event.inputs.client-name }}-${{ github.event.inputs.version }}'
          tag_push: '--force'
          

      - name: Stop Backend Service
        run: |
          docker stop backend_service_container
          docker rm backend_service_container