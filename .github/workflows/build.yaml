name: Build API Clients
on:
  workflow_dispatch:
    inputs:
      docker-image:
        description: 'Docker image name (service_name:label)'
        type: string
        required: true
jobs:
  setup:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4


      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{secrets.QUAY_USER}}
          password: ${{secrets.QUAY_PASS}}

      - name: Start Backend Service
        run: |
          docker pull ${{ github.event.inputs.docker-image }}
          docker run -d --name backend_service_container --network host ${{ github.event.inputs.docker-image }} poetry run gunicorn


      - name: Wait for service to start
        run: |
          # wait for running
          until [ "`docker inspect -f {{.State.Running}} backend_service_container`"=="true" ]; do
            sleep 0.1;
          done;
          sleep 5

      - name: Extract Service Name and Version
        run: |
          string="${{ github.event.inputs.docker-image }}"
          service_name=$(echo "$string" | awk -F'/' '{print $NF}' | awk -F':' '{print $1}')
          tag_name=$(echo "$string" | awk -F':' '{print $NF}')
          echo "SERVICE_NAME=$service_name" >> $GITHUB_ENV
          echo "TAG_NAME=$tag_name" >> $GITHUB_ENV

      - name: Build Python Client
        working-directory: ./python
        run: |
          npm install
          rm -rf clients/$SERVICE_NAME
          npx openapi-generator-cli generate -o "clients/$SERVICE_NAME" -i "http://localhost:8000/api/schema/" -g python --skip-validate-spec --minimal-update --additional-properties=floatStrictType=false --global-property="apiTests=false,modelTests=false"
          ls -l clients/$SERVICE_NAME

      - name: Add and Commit
        run: |
          echo $SERVICE_NAME
          echo $TAG_NAME
          ls -l
          ls -l python
          ls -l python/clients

      - name: Add and Commit
        uses: EndBug/add-and-commit@v9
        with:
          add: 'python/clients/'
          author_name: Generator Bot
          author_email: tharindu.bathigama@rapyuta-robotics.com
          message: 'Generated Python Client for $SERVICE_NAME tag $TAG_NAME'
          tag: '$SERVICE_NAME:$TAG_NAME'
          tag_push: '--force'
          

      - name: Stop Backend Service
        run: |
          docker stop backend_service_container
          docker rm backend_service_container