name: Build API Clients
# on:
#   push:
#     tags:
#       - '*'
#     branches:
#       - devel
#       - 'release/**'
on:
  push:
  workflow_dispatch:
    inputs:
      docker-image:
        description: 'Docker image name (service_name:label)'
        type: string
        required: true
jobs:
  setup:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2


      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{secrets.QUAY_USER}}
          password: ${{secrets.QUAY_PASS}}

      - name: Start Backend Service
        run: |
          docker pull ${{ github.event.inputs.docker-image }}
          docker run -d --name backend_service_container --network host ${{ github.event.inputs.docker-image }} poetry run gunicorn


      - name: Wait for service to start
        run: |
          # wait for running
          until [ "`docker inspect -f {{.State.Running}} backend_service_container`"=="true" ]; do
            sleep 0.1;
          done;
          sleep 5

      - name: Build Python Client
        working-directory: ./python
        run: |
          npm install
          npx openapi-generator-cli generate
          ls -l client
          echo "OK!"

      - name: Archive Python Client
        uses: actions/upload-artifact@v3
        with:
          name: python-client
          path: python/client/

      - name: Stop Backend Service
        run: |
          docker stop backend_service_container
          docker rm backend_service_container